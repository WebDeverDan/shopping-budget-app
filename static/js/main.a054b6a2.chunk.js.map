{"version":3,"sources":["App.js","index.js"],"names":["App","useState","items","setItems","inputBudgetValue","setBudgetValue","inputValue","setInputValue","priceInputValue","setPriceInputValue","totalItemCount","setTotalItemCount","totalPriceCount","setTotalPriceCount","totalItemPrice","setItemTotalPrice","priceColor","setPriceColorClass","budgetMessage","setBudgetMessage","calculateTotal","reduce","total","item","quantity","calculateTotalPrice","forEach","total_price","className","value","onChange","e","target","placeholder","icon","faPlus","onClick","newPrice","parseInt","newItem","itemName","price","isSelected","newItems","handleAddButtonClick","map","index","div","toggleComplete","faCheckCircle","faCircle","faChevronLeft","indexItem","handleQuantityDecrease","faChevronRight","handleQuantityIncrease","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a054b6a2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faChevronLeft,\n  faCircle,\n  faCheckCircle,\n  faPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = () => {\n  \tconst [items, setItems] = useState([ ]);\n\t\tconst [inputBudgetValue, setBudgetValue] = useState('');\n\t\tconst [inputValue, setInputValue] = useState('');\n\t\tconst [priceInputValue, setPriceInputValue] = useState('');\n\t\tconst [totalItemCount, setTotalItemCount] = useState(0);\n\t\tconst [totalPriceCount, setTotalPriceCount] = useState(0);\n\t\tconst [totalItemPrice, setItemTotalPrice] = useState(0);\n\t\tconst [priceColor, setPriceColorClass] = useState(\"regular-price\")\n\t\tconst [budgetMessage, setBudgetMessage] = useState(\"preparing to keep you in budget...\")\n\t\t\n\t// add new item\n\t\tconst handleAddButtonClick = () => {\n\t\t\tconst newPrice = parseInt(priceInputValue)\n\t\t\tconst newItem = {\n\t\t\t\titemName: inputValue,\n\t\t\t\tquantity: 0,\n\t\t\t\tprice: newPrice,\n\t\t\t\ttotal_price: totalItemPrice,\n\t\t\t\tisSelected: false\n\t\t\t};\n\t\t\tconst newItems = [...items, newItem];\n\t\t\tsetItems(newItems);\n\t\t\tsetInputValue('');\n\t\t\tsetPriceInputValue('')\n\t\t\tsetItemTotalPrice();\n\t\t\tcalculateTotal();\n\t\t\tcalculateTotalPrice();\n\t\t};\n\n\t// increase quantity\n\t\tconst handleQuantityIncrease = (index) => {\n\t\t\tconst newItems = [...items];\n\t\t\tconst indexItem = newItems[index];\n\t\t\tindexItem.quantity++;\n\t\t\tindexItem.total_price = indexItem.quantity * indexItem.price;\n\t\t\tsetItems(newItems);\n\t\t\tsetItemTotalPrice();\n\t\t\tcalculateTotal();\n\t\t\tcalculateTotalPrice();\n\t\t\t\n\t\t};\n\n\t// decreate quantity \n\t\tconst handleQuantityDecrease = (index) => {\n\t\t\tconst newItems = [...items];\n\t\t\tconst indexItem = newItems[index];\n\t\t\tindexItem.quantity--;\n\t\t\tindexItem.total_price = indexItem.quantity * indexItem.price;\n\t\t\tsetItems(newItems);\n\t\t\tsetItemTotalPrice();\n\t\t\tcalculateTotal();\n\t\t\tcalculateTotalPrice();\n\t\t\t\n\t\t};\n\n// toggle complete feature\n\t\tconst toggleComplete = (index) => {\n\t\t\tconst newItems = [...items];\n\t\t\tnewItems[index].isSelected = !newItems[index].isSelected;\n\t\t\tsetItems(newItems);\n\t\t};\n\n\t// this works don't mess with it\n\tconst calculateTotal = () => {\n\t\tconst totalItemCount = items.reduce((total, item) => {\n\t\t\treturn total + item.quantity;\n\t\t}, 0);\n\t\tsetTotalItemCount(totalItemCount);\n\t};\n\n\t\t// this works don't mess with it\n\t\tconst calculateTotalPrice = () => {\n\t\t\tconst itemArr = items;\n\n\t\t\tlet totalPriceCount = 0; \n\n\t\t\titemArr.forEach(total => { \n\t\t\t\ttotalPriceCount += total.total_price;\n\t\t\t});\n\t\t\tsetTotalPriceCount(totalPriceCount);\n\n\t\t\tlet priceColor = {\n\t\t\t\tcolor: \"green\"\n\t\t\t}\n\t\t\tif (totalPriceCount > inputBudgetValue) {\n\t\t\t\tpriceColor = \"over-budget\";\n\t\t\t} else {\n\t\t\t\tpriceColor = \"under-budget\";\n\t\t\t};\n\t\t\tsetPriceColorClass(priceColor)\n\t\t\tlet budgetMessage \n\t\t\tif (totalPriceCount > inputBudgetValue) {\n\t\t\t\tbudgetMessage = \"OH GOSH! You're over budget!\";\n\t\t\t} else {\n\t\t\t\tbudgetMessage = \"Excellent job staying within your budget!\";\n\t\t\t};\n\n\t\t\tsetBudgetMessage(budgetMessage)\n\t};\n\n\n\t\n\n  return (\n    <div className=\"app-background\">\n\t\t\t<h1 className=\"app-title\">Shopping Budgeting App</h1>\n\t\t\t<div className=\"add-budget-box\">\n\t\t\t\t<h1 className=\"instructions\">Start by adding your budget for today</h1>\n\t\t\t\t<input value={inputBudgetValue} onChange={(e) => setBudgetValue(e.target.value)} className=\"add-budget-input\" placeholder=\"What's your budget?\" />\n\t\t\t</div>\n      <div className=\"main-container\">\n        <div className=\"add-item-box\">\n\t\t\t\t\t\t<input value={inputValue} onChange={(e) => setInputValue(e.target.value)} className=\"add-item-input\" placeholder='Type Item' />\n\t\t\t\t\t\t<input value={priceInputValue} onChange={(e) => setPriceInputValue(e.target.value)} className=\"add-price-input\" placeholder='Type Cost' />\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} onClick={() => handleAddButtonClick()} />\n\t\t\t\t</div>\n        <div className=\"item-list\">\n          {items.map((item, index) => (\n            <div className=\"item-container\">\n              <div div className='item-name' onClick={() => toggleComplete(index)}>\n                {item.isSelected ? (\n                  <>\n                    <FontAwesomeIcon icon={faCheckCircle} />\n                    <span className=\"completed\">{item.itemName}</span>\n                  </>\n                ) : (\n                  <>\n                    <FontAwesomeIcon icon={faCircle} />\n                    <span>{item.itemName}</span>\n                  </>\n                )}\n              </div>\n\t\t\t\t\t\t\t<div>$ {item.price*item.quantity}</div>\n              <div className=\"quantity\">\n                <button>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChevronLeft} onClick={() => handleQuantityDecrease(index)} />\n                </button>\n                <span> {item.quantity} </span>\n                <button>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChevronRight} onClick={() => handleQuantityIncrease(index)} />\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\t\t\t\t<div className=\"totals\">\n\t\t\t\t\t<div className='total'>Items: {totalItemCount}</div>\n\t\t\t\t\t<div className='total'>Total $: <span className={priceColor}>{totalPriceCount}</span></div>\n\t\t\t\t\t<div className='total'>Budget: {inputBudgetValue}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<h1 className=\"budget-message\">{budgetMessage}</h1>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}